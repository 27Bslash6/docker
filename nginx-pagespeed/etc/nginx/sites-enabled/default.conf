server {
	listen   80; ## listen for ipv4; this line is default and implied
	listen   [::]:80 default ipv6only=on; ## listen for ipv6

	root /app/www;
	index index.html index.htm;

  # server_name example.com;

  # =========================================================================
    # ngx_pagespeed
    
    pagespeed on;

    pagespeed RewriteLevel CoreFilters;
    #pagespeed RewriteLevel OptimizeForBandwidth;

    # Needs to exist and be writable by nginx.  
    # Use tmpfs (/dev/shm on Ubuntu) for best performance or filesystem to reduce memory footprint
    # pagespeed FileCachePath /dev/shm/ngx_pagespeed_cache;
    pagespeed FileCachePath /tmp/ngx_pagespeed_cache;

    # Ensure requests for pagespeed optimized resources go to the pagespeed handler
    # and no extraneous headers get set.
    location ~ "\.pagespeed\.([a-z]\.)?[a-z]{2}\.[^.]{10}\.[^.]+" {
        add_header "" "";
    }

    location ~ "^/pagespeed_static/" { }
    location ~ "^/ngx_pagespeed_beacon$" { }

    pagespeed XHeaderValue "";

    # =========================================================================

    location / {
        index index.html;
    }


    # Cache static for 30d
    location ~* \.(jpg|jpeg|gif|png|css|js|ico|xml)$ {
        expires 30d;
    }

    # Deny all attempts to access hidden files such as .htaccess, .htpasswd, .DS_Store (Mac).
    location ~ /\. {
        # Keep logging the requests to parse later (or to pass to firewall utilities such as fail2ban)
        # log_not_found off;
        deny all;
    }

}


# server {
	
# 	listen 80;
# 	listen [::]:80 default ipv6only=on;

# 	return 301 https://$host$request_uri;

# }